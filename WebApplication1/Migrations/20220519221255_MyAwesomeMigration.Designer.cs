// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(TravelContext))]
    [Migration("20220519221255_MyAwesomeMigration")]
    partial class MyAwesomeMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Data.Models.Air_Flight", b =>
                {
                    b.Property<int>("Air_FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("air_flight_id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Air_FlightId"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("company_name");

                    b.Property<int>("LevelComfort")
                        .HasColumnType("integer")
                        .HasColumnName("level_comfort");

                    b.Property<int>("NumberHours")
                        .HasColumnType("integer")
                        .HasColumnName("number_hours");

                    b.HasKey("Air_FlightId")
                        .HasName("pk_air_flights");

                    b.ToTable("air_flights", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("country_id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CountryId"));

                    b.Property<string>("Climate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("climate");

                    b.Property<int>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country_name");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("language");

                    b.Property<int>("NumberCities")
                        .HasColumnType("integer")
                        .HasColumnName("number_cities");

                    b.HasKey("CountryId")
                        .HasName("pk_countries");

                    b.ToTable("countries", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("customer_id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<int>("TripId")
                        .HasColumnType("integer")
                        .HasColumnName("trip_id");

                    b.HasKey("CustomerId")
                        .HasName("pk_customers");

                    b.HasIndex("TripId")
                        .HasDatabaseName("ix_customers_trip_id");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("hotel_id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HotelId"));

                    b.Property<string>("HotelDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hotel_description");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hotel_name");

                    b.Property<int>("HotelStatus")
                        .HasColumnType("integer")
                        .HasColumnName("hotel_status");

                    b.HasKey("HotelId")
                        .HasName("pk_hotels");

                    b.ToTable("hotels", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("trip_id")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TripId"));

                    b.Property<int>("Air_FlightId")
                        .HasColumnType("integer")
                        .HasColumnName("air_flight_id");

                    b.Property<string>("Characteristics1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("characteristics1");

                    b.Property<string>("Characteristics2")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("characteristics2");

                    b.Property<string>("Characteristics3")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("characteristics3");

                    b.Property<string>("Characteristics4")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("characteristics4");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<int>("HotelId")
                        .HasColumnType("integer")
                        .HasColumnName("hotel_id");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("long_description");

                    b.Property<int>("NumberDays")
                        .HasColumnType("integer")
                        .HasColumnName("number_days");

                    b.Property<int>("NumberStars")
                        .HasColumnType("integer")
                        .HasColumnName("number_stars");

                    b.Property<string>("Nutrition")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nutrition");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("picture");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_description");

                    b.HasKey("TripId")
                        .HasName("pk_trips");

                    b.HasIndex("Air_FlightId")
                        .IsUnique()
                        .HasDatabaseName("ix_trips_air_flight_id");

                    b.HasIndex("CountryId")
                        .IsUnique()
                        .HasDatabaseName("ix_trips_country_id");

                    b.HasIndex("HotelId")
                        .IsUnique()
                        .HasDatabaseName("ix_trips_hotel_id");

                    b.ToTable("trips", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Customer", b =>
                {
                    b.HasOne("WebApplication1.Data.Models.Trip", "Trip")
                        .WithMany("Customers")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_customers_trips_trip_id");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Trip", b =>
                {
                    b.HasOne("WebApplication1.Data.Models.Air_Flight", "Air_Flight")
                        .WithOne("Trip")
                        .HasForeignKey("WebApplication1.Data.Models.Trip", "Air_FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_trips_air_flights_air_flight_id");

                    b.HasOne("WebApplication1.Data.Models.Country", "Country")
                        .WithOne("Trip")
                        .HasForeignKey("WebApplication1.Data.Models.Trip", "CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_trips_countries_country_id");

                    b.HasOne("WebApplication1.Data.Models.Hotel", "Hotel")
                        .WithOne("Trip")
                        .HasForeignKey("WebApplication1.Data.Models.Trip", "HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_trips_hotels_hotel_id");

                    b.Navigation("Air_Flight");

                    b.Navigation("Country");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Air_Flight", b =>
                {
                    b.Navigation("Trip")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Country", b =>
                {
                    b.Navigation("Trip")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Hotel", b =>
                {
                    b.Navigation("Trip")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Data.Models.Trip", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
